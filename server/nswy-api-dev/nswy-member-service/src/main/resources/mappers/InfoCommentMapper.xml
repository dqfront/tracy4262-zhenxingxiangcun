<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ovit.nswy.member.mapper.InfoCommentMapper">
	<resultMap id="BaseResultMap" type="com.ovit.nswy.member.model.InfoComment">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="information_detail_id" property="informationDetailId"
			jdbcType="INTEGER" />
		<result column="user_account" property="userAccount" jdbcType="VARCHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="thumb_up_num" property="thumbUpNum" jdbcType="INTEGER" />
		<result column="post_id" property="postId" jdbcType="INTEGER" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs" type="com.ovit.nswy.member.model.InfoComment"
		extends="BaseResultMap">
		<result column="content" property="content" jdbcType="LONGVARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, information_detail_id, user_account, user_name, create_time,
		thumb_up_num, post_id
	</sql>
	<sql id="Blob_Column_List">
		content
	</sql>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from info_comment
		where id = #{id,jdbcType=INTEGER}
	</select>
	<!-- 查询评论结果 -->
	<select id="findInfoComment" resultMap="BaseResultMap"
		parameterType="com.ovit.nswy.member.model.InfoComment">
		SELECT
			t1.id,t1.information_detail_id,t1.user_account,t1.user_name,
			t1.create_time,t1.thumb_up_num,t1.post_id,count(t2.post_id) AS postNum,
			t1.content,t3.avatar
		FROM info_comment t1 LEFT JOIN info_comment t2 ON t1.id = t2.post_id
		LEFT JOIN login_user t3 ON t1.user_account = t3.login_account
		GROUP BY t1.id
		<trim prefix="HAVING" prefixOverrides="AND |OR ">
			<if test="informationDetailId != null and informationDetailId != ''">
				AND t1.information_detail_id = #{informationDetailId}
			</if>
			<if test="userAccount != null and userAccount != ''">
				AND t1.user_account = #{userAccount}
			</if>
		</trim>
	</select>

    <!-- 查询我的评论结果 -->
    <select id="findMyInfoComment" resultMap="BaseResultMap" parameterType="java.util.Map">
		SELECT
			t1.id,t1.information_detail_id,t1.user_account,t1.user_name,
			t1.create_time,t1.thumb_up_num,t1.post_id,count(t2.post_id) AS postNum,
			t1.content,t3.avatar
		FROM info_comment t1
		LEFT JOIN info_comment t2 ON t1.id = t2.post_id
		LEFT JOIN login_user t3 ON t1.user_account = t3.login_account
		GROUP BY t1.id
		<trim prefix="HAVING" prefixOverrides="AND |OR ">
			<if test="informationDetailId != null and informationDetailId != ''">
				AND t1.information_detail_id = #{informationDetailId}
			</if>
			<if test="userAccount != null and userAccount != ''">
				AND t1.user_account = #{userAccount}
			</if>
		</trim>
    </select>


	<select id="listComment" resultMap="BaseResultMap" parameterType="java.util.Map">
		select c.*,t1.avatar,count(d.post_id) AS postNum FROM ${TABLE_NAME} c
		LEFT JOIN ${TABLE_NAME} d ON c.id = d.post_id
		LEFT JOIN login_user t1 ON c.user_account = t1.login_account
		GROUP BY c.id
		HAVING 1=1
		<if test="lists != null and lists.size()>0">
			and c.information_detail_id in
			<foreach collection="lists" item="item" index="index"
				separator="," open="(" close=")">
				#{item.id}
			</foreach>
		</if>
	</select>

	<select id="listCommentDetail" resultMap="BaseResultMap" parameterType="java.util.Map">
		select * from ${TABLE_NAME} where information_detail_id = #{information_detail_id}

		UNION ALL

		select * from ${TABLE_NAME} where post_id in(

		select id from ${TABLE_NAME} where information_detail_id = #{information_detail_id}
		)

	</select>

	<select id="findComment" resultType="java.util.Map" parameterType="java.util.Map">


		<if test="account =='unfinded'">
			SELECT c.id,c.content,c.create_time,c.thumb_up_num,c.user_account,c.information_detail_id,COUNT(d.post_id) FROM ${TABLE_NAME} c
			LEFT JOIN ${TABLE_NAME} d ON c.id = d.post_id
			GROUP BY c.id
			HAVING 1=1
			<if test="information_detail_id != null and information_detail_id != ''">
				and c.information_detail_id  = #{information_detail_id}
			</if>
			order by c.create_time desc
		</if>

		<if test="account !='unfinded' and account !=null">
			SELECT c.id,c.content,c.create_time,c.thumb_up_num,c.user_account,c.information_detail_id,COUNT(d.post_id) FROM ${TABLE_NAME} c
			LEFT JOIN ${TABLE_NAME} d ON c.id = d.post_id
			GROUP BY c.id
			<trim prefix="HAVING" prefixOverrides="AND |OR ">
				<if test="information_detail_id != null and information_detail_id != ''">
					AND c.information_detail_id = #{information_detail_id}
				</if>
				<if test="account != null and account != ''">
					AND c.user_account = #{account}
				</if>
			</trim>
			order by c.create_time desc
		</if>

	</select>

	<select id="findCommentHF" resultType="java.util.Map" parameterType="java.util.Map">
		select c.id,c.content,c.create_time,c.thumb_up_num,c.user_account,c.information_detail_id from ${TABLE_NAME} c where c.post_id = #{id}

	</select>

	<select id="findCommentHFDetail" resultType="java.util.Map" parameterType="java.util.Map">
		select c.id,c.user_name as name from ${TABLE_NAME} c where c.id = #{id}

	</select>

	<delete id="deleteMyComment" parameterType="java.util.Map">
		delete from ${TABLE_NAME} where id = #{id}
	</delete>



	<select id="findInfoComments" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		select c.* from info_detail d LEFT JOIN info_comment c
		on
		d.id=c.information_detail_id where 1=1
		<if test="account != null">
			and c.user_account = #{account}
		</if>
		<if test="label != null">
			and d.label = #{label}
		</if>
		and d.id=#{id}
		order by create_time desc
	</select>

	<select id="findInfoCommentId" resultMap="BaseResultMap"
		parameterType="com.ovit.nswy.member.model.InfoComment">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from info_comment
		where id = #{id}
	</select>

	<!-- 查询我的评论 -->
	<select id="findMyComment" resultMap="BaseResultMap"
		parameterType="com.ovit.nswy.member.model.InfoComment">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from info_comment
		where information_detail_id = #{informationDetailId} and user_account =
		#{userAccount}
	</select>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from info_comment
		where id = #{id,jdbcType=INTEGER}
	</delete>

	<insert id="insert" parameterType="com.ovit.nswy.member.model.InfoComment">
		insert into info_comment (id, information_detail_id, user_account,
		user_name, create_time, thumb_up_num,
		post_id, content)
		values (#{id,jdbcType=INTEGER}, #{informationDetailId,jdbcType=INTEGER},
		#{userAccount,jdbcType=VARCHAR},
		#{userName,jdbcType=VARCHAR},now(), #{thumbUpNum,jdbcType=INTEGER},
		#{postId,jdbcType=INTEGER}, #{content,jdbcType=LONGVARCHAR})
	</insert>
	<insert id="insertSelective" parameterType="com.ovit.nswy.member.model.InfoComment">
		insert into info_comment
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="informationDetailId != null">
				information_detail_id,
			</if>
			<if test="userAccount != null">
				user_account,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="thumbUpNum != null">
				thumb_up_num,
			</if>
			<if test="postId != null">
				post_id,
			</if>
			<if test="content != null">
				content,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="informationDetailId != null">
				#{informationDetailId,jdbcType=INTEGER},
			</if>
			<if test="userAccount != null">
				#{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				now(),
			</if>
			<if test="thumbUpNum != null">
				#{thumbUpNum,jdbcType=INTEGER},
			</if>
			<if test="postId != null">
				#{postId,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				#{content,jdbcType=LONGVARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.ovit.nswy.member.model.InfoComment">
		update info_comment
		<set>
			<if test="informationDetailId != null">
				information_detail_id = #{informationDetailId,jdbcType=INTEGER},
			</if>
			<if test="userAccount != null">
				user_account = #{userAccount,jdbcType=VARCHAR},
			</if>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time =now(),
			</if>
			<if test="thumbUpNum != null">
				thumb_up_num = #{thumbUpNum,jdbcType=INTEGER},
			</if>
			<if test="postId != null">
				post_id = #{postId,jdbcType=INTEGER},
			</if>
			<if test="content != null">
				content = #{content,jdbcType=LONGVARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs" parameterType="com.ovit.nswy.member.model.InfoComment">
		update info_comment
		set information_detail_id = #{informationDetailId,jdbcType=INTEGER},
		user_account = #{userAccount,jdbcType=VARCHAR},
		user_name = #{userName,jdbcType=VARCHAR},
		create_time =now(),
		thumb_up_num = #{thumbUpNum,jdbcType=INTEGER},
		post_id = #{postId,jdbcType=INTEGER},
		content = #{content,jdbcType=LONGVARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.ovit.nswy.member.model.InfoComment">
		update info_comment
		set information_detail_id = #{informationDetailId,jdbcType=INTEGER},
		user_account = #{userAccount,jdbcType=VARCHAR},
		user_name = #{userName,jdbcType=VARCHAR},
		create_time =now(),
		thumb_up_num = #{thumbUpNum,jdbcType=INTEGER},
		post_id = #{postId,jdbcType=INTEGER}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateThumbUpNum" parameterType="com.ovit.nswy.member.model.InfoComment">
		update info_comment
		set
		thumb_up_num = thumb_up_num + 1
		where id = #{id,jdbcType=INTEGER}
	</update>
    <!--回复成功后的回调-->
    <select id="replylist" parameterType="java.util.Map" resultMap="BaseResultMap">
        SELECT * FROM info_comment WHERE user_account=#{userAccount,jdbcType=VARCHAR} AND information_detail_id=#{informationDetailId,jdbcType=INTEGER}
    </select>
    <!--回复他人的评论-->
    <select id="replyToOther" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT * FROM info_comment WHERE post_id=#{postId}
    </select>
</mapper>